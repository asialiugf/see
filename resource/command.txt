 sed -i "s/see_k_bar_init/see_block_init/g" `grep see_k_bar_init -rl ./*`         
 useradd -d /home/ctptst  -g ctp  -m ctptst

 find ./ -name "*.c" | xargs grep "ngx_signal_t" 


make -f ccc/Makefile
make[1]: Entering directory `/home/rabbit/see/pgm'
cc    -c -pipe  -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g -pthread -I ccc/com/inc -I ccc/ios/inc -I ccc/stt/inc -I
/usr/local/include/nanomsg -I /usr/local/include/zdb -I /usr/local/include/errlog -o ccc/com/obj/see_errlog.o  ccc/com/src/see_errlog.
c

swapoff -a && swapon -a

sync; sync; sync;
echo 3 >/proc/sys/vm/drop_caches
echo 2 >/proc/sys/vm/drop_caches
echo 1 >/proc/sys/vm/drop_caches
echo 0 >/proc/sys/vm/drop_caches

git config --global push.default simple
#==================== git 
git add pyy
git add pgm
git commit -m "modified"
git push

# 创建一个分支，并上传到服务器
$ git branch test01
$ git checkout test01
$ git push --set-upstream origin test01
#==================== git 

#以下两个命令无副作用
$ git branch -a
* master
  test01
  remotes/origin/master
  remotes/origin/test01
$ 
$ git config --local --list
# 删除远程分支
$ git push origin --delete test01
# 删除本地分支 
$ git branch -d test01
#====================
# 修改 ssh 方式
# git remote -v  可以查看是不是ssh方式，还是http方式
$ git remote rm origin
$ git remote add origin git@github.com:xxxxxxxx/see.git
$ git push --set-upstream origin master

首先，清除所有的key-pair
$ ssh-add -D
$ rm -r ~/.ssh

删除你在github中的public-key重新生成ssh密钥对
$ ssh-keygen -t rsa -C "xxxxxxx@xxxx.com"  #git用户
$ chmod 0700 ~/.ssh
$ chmod 0600 ~/.ssh/id_rsa*

前往 GitHub 网站的"account settings"
依次点击"Setting -> SSH Keys"->"New SSH key" 
Title处填写“id_rsa.pub”或其他任意信息。 
key处原样拷贝~/.ssh/id_rsa.pub` 文件的内容：
$ cat ~/.ssh/id_rsa.pub

测试一下：
$ ssh -T git@github.com
Warning: Permanently added the RSA host key for IP address '192.30.255.113' to the list of known hosts.
Hi xxxxxxxx! You've successfully authenticated, but GitHub does not provide shell access.

#====================



Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

#====================
